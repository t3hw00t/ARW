{
  "version": 1,
  "updated": "2025-09-12 00:05 UTC",
  "tasks": [
    {
      "id": "t-250909170247-9910",
      "title": "Integrate tasks tracker with docs",
      "desc": "Add .arw/tasks.json, scripts/tasks.sh, docgen tasks page",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 15:02:47 UTC",
      "done_at": "2025-09-09 15:02:47 UTC"
    },
    {
      "id": "t-250909170247-6435",
      "title": "Configure Dependabot",
      "desc": "Add .github/dependabot.yml for cargo and actions",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 15:02:47 UTC",
      "done_at": "2025-09-09 15:02:47 UTC"
    },
    {
      "id": "t-250909170247-6008",
      "title": "Start service and verify /about",
      "desc": "Run arw-svc locally with ARW_DEBUG=1 and curl /about",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 15:02:47 UTC",
      "done_at": "2025-09-09 15:02:47 UTC"
    },
    {
      "id": "t-250909170247-1457",
      "title": "Configure local git identity",
      "desc": "Set repo-local user.name and user.email",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 15:02:47 UTC",
      "done_at": "2025-09-09 15:02:47 UTC"
    },
    {
      "id": "t-250909170247-4088",
      "title": "GitHub CLI login",
      "desc": "Authenticate gh; requires GH_TOKEN or interactive login",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-09 16:14:14 UTC",
          "text": "Not required (SSH-only auth to GitHub)"
        }
      ],
      "updated": "2025-09-09 16:14:14 UTC",
      "done_at": "2025-09-09 16:14:14 UTC"
    },
    {
      "id": "t-250909170248-9575",
      "title": "Install GTK dev packages + build tray",
      "desc": "Install libgtk-3-dev and friends; build arw-tray",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-09 16:07:39 UTC",
          "text": "Attempted tray build; pkg-config missing gdk-3.0 (install libgtk-3-dev, ensure pkg-config finds .pc files)"
        },
        {
          "time": "2025-09-09 16:14:14 UTC",
          "text": "Linker error: -lxdo not found; install libxdo-dev"
        },
        {
          "time": "2025-09-09 16:17:25 UTC",
          "text": "Tray built successfully with GTK+xdo"
        }
      ],
      "updated": "2025-09-09 16:17:25 UTC",
      "done_at": "2025-09-09 16:17:25 UTC"
    },
    {
      "id": "t-250909180730-7880",
      "title": "Add ARW_NO_TRAY to start.sh",
      "desc": "Allow skipping tray in CLI-only environments",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 16:07:30 UTC",
      "done_at": "2025-09-09 16:07:30 UTC"
    },
    {
      "id": "t-250909180808-9579",
      "title": "Verify SSH git auth to GitHub",
      "desc": "ssh -T git@github.com and git ls-remote origin",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 16:08:08 UTC",
      "done_at": "2025-09-09 16:08:08 UTC"
    },
    {
      "id": "t-250909181725-7338",
      "title": "Create portable dist bundle",
      "desc": "scripts/package.sh --no-build -> dist/arw-*.zip",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 16:17:25 UTC",
      "done_at": "2025-09-09 16:17:25 UTC"
    },
    {
      "id": "t-250909193840-5994",
      "title": "Add mkdocs.yml config",
      "desc": "Provide minimal site config so docs workflow can build",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:38:40 UTC",
      "done_at": "2025-09-09 17:38:40 UTC"
    },
    {
      "id": "t-250909193840-6168",
      "title": "Stabilize CI for tray + tests",
      "desc": "Install GTK/xdo dev libs and drop --all-features in tests",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:38:40 UTC",
      "done_at": "2025-09-09 17:38:40 UTC"
    },
    {
      "id": "t-250909194935-0534",
      "title": "Refactor svc ext to use io/paths",
      "desc": "Remove duplicate helpers; call ext::io and ext::paths throughout",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:49:35 UTC",
      "done_at": "2025-09-09 17:49:35 UTC"
    },
    {
      "id": "t-250909194935-6232",
      "title": "Format codebase (cargo fmt)",
      "desc": "Run cargo fmt --all to satisfy CI format check",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:49:35 UTC",
      "done_at": "2025-09-09 17:49:35 UTC"
    },
    {
      "id": "t-250909194935-4017",
      "title": "Lint and tests green",
      "desc": "cargo clippy -D warnings; cargo test --workspace --locked",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:49:35 UTC",
      "done_at": "2025-09-09 17:49:35 UTC"
    },
    {
      "id": "t-250909195456-7421",
      "title": "Add Justfile for common workflows",
      "desc": "Build, test, lint, start, docs, tasks",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 17:54:56 UTC",
      "done_at": "2025-09-09 17:54:56 UTC"
    },
    {
      "id": "t-250909195456-5087",
      "title": "Commit and push changes to main",
      "desc": "Pushed via SSH to origin/main",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-09 17:54:56 UTC",
          "text": "HEAD 3cd4819"
        }
      ],
      "updated": "2025-09-09 17:54:56 UTC",
      "done_at": "2025-09-09 17:54:56 UTC"
    },
    {
      "id": "t-250909200354-9170",
      "title": "Enable wasm feature compile + test",
      "desc": "Stub wasm runtime; add feature build step in CI; add unit test",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 18:03:54 UTC",
      "done_at": "2025-09-09 18:03:54 UTC"
    },
    {
      "id": "t-250909200354-6386",
      "title": "Add Makefile mirroring Justfile",
      "desc": "Make targets: build/test/lint/fmt/package/docs/start",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 18:03:55 UTC",
      "done_at": "2025-09-09 18:03:55 UTC"
    },
    {
      "id": "t-250909200355-9261",
      "title": "Publish artifacts on tags",
      "desc": "Update dist workflow to attach artifacts to GitHub Release",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 18:03:55 UTC",
      "done_at": "2025-09-09 18:03:55 UTC"
    },
    {
      "id": "t-250909201215-6424",
      "title": "Tag release v0.1.0 and trigger dist",
      "desc": "git tag v0.1.0; push tag to origin to run dist workflow",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-09 18:12:15 UTC",
          "text": "pushed tag v0.1.0; GH Actions run started"
        }
      ],
      "updated": "2025-09-09 18:12:15 UTC",
      "done_at": "2025-09-09 18:12:15 UTC"
    },
    {
      "id": "t-250909201532-3510",
      "title": "Tag release v0.1.1 and trigger dist",
      "desc": "fix release asset path; push v0.1.1",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-09 18:15:32 UTC",
          "text": "pushed tag v0.1.1; GH Actions queued"
        }
      ],
      "updated": "2025-09-09 18:15:32 UTC",
      "done_at": "2025-09-09 18:15:32 UTC"
    },
    {
      "id": "t-250909203713-1009",
      "title": "Create branch chore/structure-core-fixes",
      "desc": "Fix workflows perms; Windows no-tray; CLI help; core warnings",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 18:37:13 UTC",
      "done_at": "2025-09-09 18:37:13 UTC"
    },
    {
      "id": "t-250909203713-3512",
      "title": "Fix workflows permissions + Windows start + CLI help",
      "desc": "Prepare structure before next release",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 18:37:13 UTC",
      "done_at": "2025-09-09 18:37:13 UTC"
    },
    {
      "id": "t-250909224102-8952",
      "title": "Plan: Heuristic engine crate + integration",
      "desc": "Create arw-feedback crate; actor with O(1) stats; bus deltas; snapshot+persistence; wire /feedback/*",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-09 20:41:02 UTC"
    },
    {
      "id": "t-250909224102-9629",
      "title": "Spec: AsyncAPI+MCP artifacts + /spec/*",
      "desc": "Generate /spec/asyncapi.yaml and /spec/mcp-tools.json in CI and serve endpoints",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-09 20:41:02 UTC"
    },
    {
      "id": "t-250909224103-5251",
      "title": "Policy: hook feedback auto-apply",
      "desc": "Shadow mode default; policy-gated auto-apply with bounds and rate limits",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-09 20:41:03 UTC"
    },
    {
      "id": "t-250909224103-0211",
      "title": "UI: near-live feedback in /debug",
      "desc": "Consume Feedback.Suggested via SSE; show deltas with rationale/confidence",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-09 20:41:03 UTC"
    },
    {
      "id": "t-250909225651-0602",
      "title": "Unify tools listing with registry",
      "desc": "ext/tools_api now uses arw_core::introspect_tools()",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 20:56:52 UTC",
      "done_at": "2025-09-09 20:56:52 UTC"
    },
    {
      "id": "t-250909225652-1355",
      "title": "Serve /spec/* endpoints",
      "desc": "OpenAPI/AsyncAPI/MCP files if present under spec/",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 20:56:52 UTC",
      "done_at": "2025-09-09 20:56:52 UTC"
    },
    {
      "id": "t-250909225652-5456",
      "title": "Start lightweight feedback engine",
      "desc": "Actor loop publishes Feedback.Suggested; snapshot held in-memory",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 20:56:52 UTC",
      "done_at": "2025-09-09 20:56:52 UTC"
    },
    {
      "id": "t-250909225652-0810",
      "title": "Gate arrow ingestion bench code",
      "desc": "Move arrow2 to dev-deps; feature arrow-bench for bench",
      "status": "done",
      "notes": [],
      "updated": "2025-09-09 20:56:52 UTC",
      "done_at": "2025-09-09 20:56:52 UTC"
    },
    {
      "id": "t-250911040745-3073",
      "title": "Tests: stabilize gating contract tests",
      "desc": "Serialize shared-state tests with serial_test to avoid races",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-11 02:08:04 UTC",
          "text": "arw-core: gate tests now use #[serial]; fixed nondeterministic failure"
        }
      ],
      "updated": "2025-09-11 02:08:04 UTC",
      "done_at": "2025-09-11 02:08:04 UTC"
    },
    {
      "id": "t-250911040804-6168",
      "title": "Clippy: clean workspace with -D warnings",
      "desc": "Resolve clippy warnings across events, otel, core, connector, svc",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-11 02:08:05 UTC",
          "text": "events: while-let loop; otel: remove unused prelude import; core: remove duplicated cfg attribute; connector: avoid unreachable tail via ctrl-c guard; svc: explicit OpenOptions + no-op cast"
        }
      ],
      "updated": "2025-09-11 02:08:05 UTC",
      "done_at": "2025-09-11 02:08:05 UTC"
    },
    {
      "id": "t-250911230219-7249",
      "title": "Refactor: split ext/ by domain & unify AppState",
      "desc": "Extract models/memory/feedback/chat/tools/projects/orchestrator into modules with their own Router<AppState> builders; unify a single AppState used by tests and runtime (trait-based EventBus+Queue); remove duplicate state and thin lib.rs to use the shared state.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:02:19 UTC"
    },
    {
      "id": "t-250911230236-6445",
      "title": "Security: per-route gating layers; slim global admin middleware",
      "desc": "Attach arw_gate checks (or equivalent) via route-layer middleware; remove wrapper functions and reduce prefix-gated global middleware to just truly global endpoints; add per-route tests for 403/429/OK.",
      "status": "paused",
      "notes": [
        {
          "time": "2025-09-11 21:03:46 UTC",
          "text": "Duplicate of t-250911230252-9858; track only the latter."
        }
      ],
      "updated": "2025-09-11 21:03:46 UTC"
    },
    {
      "id": "t-250911230252-9858",
      "title": "Security: per-route gating layers; slim global admin middleware",
      "desc": "Attach arw_gate checks (or equivalent) via route-layer middleware; remove wrapper functions and reduce prefix-gated global middleware to just truly global endpoints; add per-route tests for 403/429/OK.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:02:52 UTC"
    },
    {
      "id": "t-250911230258-1357",
      "title": "Runtime: dynamic HTTP timeout from governor hints",
      "desc": "Introduce a live config handle (Arc<AtomicU64>) read by a custom TimeoutLayer; wire updates from /governor/hints into the handle; remove env-only binding; add unit test covering hint update takes effect without restart.",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-11 21:10:37 UTC",
          "text": "Implemented dyn timeout middleware + global handle; wired governor hints + outgoing HTTP; built & tests green for arw-svc."
        }
      ],
      "updated": "2025-09-11 21:10:37 UTC",
      "done_at": "2025-09-11 21:10:37 UTC"
    },
    {
      "id": "t-250911230302-0138",
      "title": "Tools: central execution registry unified for /tools and tasks",
      "desc": "Define ToolExecutor trait and registry keyed by id; arw-macros submit both ToolInfo and an exec fn; route /tools/run and start_local_task_worker both dispatch via registry; remove duplicate run_tool_internal; honor per-tool ingress/egress gates.",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-11 21:14:14 UTC",
          "text": "Added tools_exec registry; unified run path for /tools and task worker; preserved listing via arw_core and local list for debug."
        }
      ],
      "updated": "2025-09-11 21:14:14 UTC",
      "done_at": "2025-09-11 21:14:14 UTC"
    },
    {
      "id": "t-250911230306-7961",
      "title": "Introspection: auto-generate /about endpoints from router",
      "desc": "Wrap Router with a builder that records (method,path) on registration; at startup snapshot the registry and serve via /about; remove static array to prevent drift; add test to ensure a new route appears in /about.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:06 UTC"
    },
    {
      "id": "t-250911230308-0779",
      "title": "Orchestrator: configurable lease, nack delay, and max in-flight",
      "desc": "Expose ARW_TASK_LEASE_MS and group max in-flight; implement lease extension and nack(retry_after_ms) paths; add unit tests for lease expiry and re-enqueue; update connector example to honor nack delay.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:08 UTC"
    },
    {
      "id": "t-250911230312-0863",
      "title": "Admin auth: hashed tokens + per-token/IP sliding rate-limit",
      "desc": "Support multiple admin tokens (hashed or HMACed), rotate without restart; replace fixed-window RL with sliding window keyed by token/IP; keep constant-time compare where applicable; add tests for lockout and fairness.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:12 UTC"
    },
    {
      "id": "t-250911230316-4765",
      "title": "NATS: TLS/auth config and reconnect tuning",
      "desc": "Add creds/jwt/nkey/TLS config to cluster section; implement robust reconnect/backoff; document subject ACLs; update connector + svc to use secure options; extend compose/helm values.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:16 UTC"
    },
    {
      "id": "t-250911230320-8615",
      "title": "Metrics: structured registry w/ histograms",
      "desc": "Adopt metrics + prometheus exporters; replace manual string metrics; add request latency histogram, per-endpoint counters; keep ext/stats JSON for UI; wire registry to /metrics.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:20 UTC"
    },
    {
      "id": "t-250911230325-2116",
      "title": "Tests: end-to-end coverage for endpoints & gating",
      "desc": "Add ServiceExt::oneshot integration tests for /healthz,/about,/tools,/memory,/models,/chat plus policy branches (403/429/OK); add test fixtures for admin token and x-arw-gate capsule; wire into CI.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:25 UTC"
    },
    {
      "id": "t-250911230329-4722",
      "title": "CLI: migrate arw-cli to clap",
      "desc": "Use clap derive for subcommands, --help generation, shell completions; keep existing verbs (paths/tools/gate/capsule) and add JSON output flag; add tests for parsing.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:29 UTC"
    },
    {
      "id": "t-250911230333-9794",
      "title": "RPU: watch trust store and strengthen verification",
      "desc": "Add fs-watch for ARW_TRUST_CAPSULES to hot-reload issuers; enrich ABAC checks; expose /introspect/trust for debugging; tests with sample ed25519 and secp256k1 keys/capsules.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 21:03:33 UTC"
    },
    {
      "id": "t-250912001055-0044",
      "title": "Phase 2: Observations read-model + /state/observations",
      "desc": "Add obs store; fold from bus subscriber; expose GET /state/observations; drive Debug UI off this.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 22:10:55 UTC"
    },
    {
      "id": "t-250912001100-3438",
      "title": "Phase 2: Beliefs/Intents/Actions stores + endpoints",
      "desc": "Define typed events; add stores for beliefs/intents/actions; add GET /state/{beliefs,intents,actions}; wire feedback engine as belief generator and reconciler to apply intents under policy.",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 22:11:00 UTC"
    },
    {
      "id": "t-250912001105-7850",
      "title": "Phase 3: Episodes + Debug UI reactive views",
      "desc": "Stitch episodes by corr_id; persist episodic summaries; expose GET /state/episodes; update Debug UI to render SSE + /state/* in a single live view (truth window).",
      "status": "todo",
      "notes": [],
      "updated": "2025-09-11 22:11:05 UTC"
    },
    {
      "id": "t-250912020516-8533",
      "title": "Phase 1: AppState builder + unified struct",
      "desc": "Introduce apps/arw-svc/src/app_state.rs; unify bin/lib on shared AppState; add Resources container for future typed services; adjust main/lib to use builder.",
      "status": "done",
      "notes": [
        {
          "time": "2025-09-12 00:05:22 UTC",
          "text": "Unified AppState in app_state.rs; main/lib migrated; added Resources container; built+tests green for arw-svc."
        }
      ],
      "updated": "2025-09-12 00:05:22 UTC",
      "done_at": "2025-09-12 00:05:22 UTC"
    }
  ]
}
