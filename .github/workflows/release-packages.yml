name: Release Packages

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release_gate:
    name: release blockers cleared
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
    steps:
      - name: Check restructure release blockers
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const label = 'release-blocker:restructure';
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner,
              repo,
              state: 'open',
              labels: label,
              per_page: 100,
            });
            if (issues.length > 0) {
              const refs = issues.map(issue => `#${issue.number} (${issue.title})`).join(', ');
              core.setFailed(`Open restructure release blockers: ${refs}`);
            } else {
              core.info('No open restructure release blockers.');
            }

  linux:
    name: package (linux)
    needs: release_gate
    runs-on: ubuntu-latest
    environment:
      name: releases
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a # v2
        with:
          workspaces: |
            .

      - name: Build native (x86_64)
        run: |
          cargo build --release -p arw-server -p arw-cli --locked || true
          bash scripts/package.sh

      - name: Install Linux ARM64 cross toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build cross (aarch64-unknown-linux-gnu)
        env:
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: |
          rustup target add aarch64-unknown-linux-gnu
          cargo build --release -p arw-server -p arw-cli --target aarch64-unknown-linux-gnu --locked || true
          bash scripts/package.sh --no-build --target aarch64-unknown-linux-gnu

      - name: Upload release assets
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2
        with:
          files: |
            dist/*.zip

  windows:
    name: package (windows)
    needs: release_gate
    runs-on: windows-latest
    environment:
      name: releases
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a # v2
        with:
          workspaces: |
            .

      - name: Build native (x86_64)
        shell: pwsh
        run: |
          cargo build --release -p arw-server -p arw-cli --locked
          ./scripts/package.ps1

      - name: Build cross (aarch64-pc-windows-msvc)
        shell: pwsh
        run: |
          rustup target add aarch64-pc-windows-msvc
          cargo build --release -p arw-server -p arw-cli --target aarch64-pc-windows-msvc --locked
          ./scripts/package.ps1 -NoBuild -Target aarch64-pc-windows-msvc

      - name: Upload release assets
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2
        with:
          files: |
            dist/*.zip

  macos:
    name: package (macos)
    needs: release_gate
    runs-on: macos-latest
    environment:
      name: releases
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a # v2
        with:
          workspaces: |
            .

      - name: Build native
        run: |
          cargo build --release -p arw-server -p arw-cli --locked || true
          bash scripts/package.sh

      - name: Upload release assets
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2
        with:
          files: |
            dist/*.zip

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
