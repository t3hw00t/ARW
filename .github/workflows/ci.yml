name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CARGO_TERM_COLOR: always
      REPRO_NOW: 1970-01-01T00:00:00Z
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
            components: rustfmt, clippy

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs deps
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-git-revision-date-localized-plugin pymdown-extensions

      - name: Validate feature registry
        run: python3 scripts/check_feature_integrity.py

      - name: Validate system components registry
        run: python3 scripts/check_system_components_integrity.py

      - name: Generate docs from registries
        run: |
          python3 scripts/gen_feature_matrix.py
          python3 scripts/gen_feature_catalog.py
          python3 scripts/gen_system_components.py

      - name: Ensure generated docs are committed
        run: |
          git add -A
          git diff --cached --name-only
          git diff --cached --quiet || (echo 'error: uncommitted generated docs' && exit 1)

      - name: Build docs (strict)
        run: mkdocs build --strict

      - name: Rust format
        run: cargo fmt --all --check

      - name: Clippy (core/server/svc)
        run: cargo clippy -p arw-core -p arw-server -p arw-svc -- -D warnings

      - name: Tests (core server + svc)
        run: cargo nextest run -p arw-server -p arw-svc

