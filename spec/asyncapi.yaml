asyncapi: 2.6.0
info:
  title: "arw-svc events"
  version: "0.1.0"
defaultContentType: application/json
channels:
  Service.Start:
    subscribe:
      message:
        $ref: '#/components/messages/ServiceStart'
  Service.Health:
    subscribe:
      message:
        $ref: '#/components/messages/ServiceHealth'
  Service.Test:
    subscribe:
      message:
        $ref: '#/components/messages/ServiceTest'
  Governor.Changed:
    subscribe:
      message:
        $ref: '#/components/messages/GovernorChanged'
  Memory.Applied:
    subscribe:
      message:
        $ref: '#/components/messages/MemoryApplied'
  Models.Changed:
    subscribe:
      message:
        $ref: '#/components/messages/ModelsChanged'
  Models.DownloadProgress:
    subscribe:
      message:
        $ref: '#/components/messages/ModelsDownloadProgress'
  Tool.Ran:
    subscribe:
      message:
        $ref: '#/components/messages/ToolRan'
  Task.Completed:
    subscribe:
      message:
        $ref: '#/components/messages/TaskCompleted'
  Feedback.Signal:
    subscribe:
      message:
        $ref: '#/components/messages/FeedbackSignal'
  Feedback.Suggested:
    subscribe:
      message:
        $ref: '#/components/messages/FeedbackSuggested'
  Feedback.Applied:
    subscribe:
      message:
        $ref: '#/components/messages/FeedbackApplied'
  Hierarchy.RoleChanged:
    subscribe:
      message:
        $ref: '#/components/messages/HierarchyRoleChanged'
  Hierarchy.State:
    subscribe:
      message:
        $ref: '#/components/messages/HierarchyState'
components:
  messages:
    ServiceStart:
      name: Service.Start
      payload:
        type: object
        additionalProperties: true
    ServiceHealth:
      name: Service.Health
      payload:
        type: object
        properties:
          ok: { type: boolean }
    ServiceTest:
      name: Service.Test
      payload:
        type: object
        additionalProperties: true
    GovernorChanged:
      name: Governor.Changed
      payload:
        type: object
        properties:
          profile: { type: string }
    MemoryApplied:
      name: Memory.Applied
      payload:
        type: object
        additionalProperties: true
    ModelsChanged:
      name: Models.Changed
      payload:
        type: object
        additionalProperties: true
    ModelsDownloadProgress:
      name: Models.DownloadProgress
      payload:
        type: object
        properties:
          id: { type: string }
          progress: { type: integer }
    ToolRan:
      name: Tool.Ran
      payload:
        type: object
        properties:
          id: { type: string }
          output: { type: object }
    TaskCompleted:
      name: Task.Completed
      payload:
        type: object
        properties:
          id: { type: string }
          ok: { type: boolean }
          latency_ms: { type: integer }
          error: { type: ["string","null"] }
          output: { type: object }
    FeedbackSignal:
      name: Feedback.Signal
      payload:
        type: object
        properties:
          signal:
            type: object
            properties:
              id: { type: string }
              kind: { type: string }
              target: { type: string }
              confidence: { type: number }
              severity: { type: integer }
    FeedbackSuggested:
      name: Feedback.Suggested
      payload:
        type: object
        properties:
          version: { type: integer }
          suggestions:
            type: array
            items:
              type: object
              properties:
                id: { type: string }
                action: { type: string }
                params: { type: object }
                rationale: { type: string }
                confidence: { type: number }
    FeedbackApplied:
      name: Feedback.Applied
      payload:
        type: object
        properties:
          id: { type: string }
          action: { type: string }
          params: { type: object }
    HierarchyRoleChanged:
      name: Hierarchy.RoleChanged
      payload:
        type: object
        properties:
          role: { type: string }
    HierarchyState:
      name: Hierarchy.State
      payload:
        type: object
        properties:
          epoch: { type: integer }
