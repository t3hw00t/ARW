{
  "type": "reference",
  "total_groups": 12,
  "total_keys": 47,
  "groups": [
    {
      "name": "Orchestration",
      "summary": "Task queueing and lifecycle events.",
      "keys": [
        {
          "id": "queue:enqueue",
          "title": "Queue Enqueue",
          "summary": "Schedule work onto the orchestrator queue.",
          "stability": "stable"
        },
        {
          "id": "events:task.completed",
          "title": "Task Completed Event",
          "summary": "Emit task lifecycle completion events to subscribers.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Memory",
      "summary": "Retrieval-augmented memory operations and quota management.",
      "keys": [
        {
          "id": "memory:get",
          "title": "Memory Fetch",
          "summary": "Read stored memory capsules for retrieval augmented operations.",
          "stability": "stable"
        },
        {
          "id": "memory:save",
          "title": "Memory Save",
          "summary": "Persist a new memory capsule to the shared store.",
          "stability": "stable"
        },
        {
          "id": "memory:load",
          "title": "Memory Load",
          "summary": "Load memory collections into the active runtime context.",
          "stability": "stable"
        },
        {
          "id": "memory:apply",
          "title": "Memory Apply",
          "summary": "Apply memory updates or patches to existing capsules.",
          "stability": "stable"
        },
        {
          "id": "memory:limit:get",
          "title": "Memory Limit Inspect",
          "summary": "Inspect the configured memory quota for a scope.",
          "stability": "stable"
        },
        {
          "id": "memory:limit:set",
          "title": "Memory Limit Update",
          "summary": "Adjust the allowed memory quota for a scope.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Models",
      "summary": "Model registry, lifecycle, and distribution controls.",
      "keys": [
        {
          "id": "models:list",
          "title": "Models List",
          "summary": "Enumerate registered model adapters and aliases.",
          "stability": "stable"
        },
        {
          "id": "models:refresh",
          "title": "Models Refresh",
          "summary": "Refresh model registry metadata from upstream sources.",
          "stability": "stable"
        },
        {
          "id": "models:save",
          "title": "Models Save",
          "summary": "Persist model artifacts or configuration snapshots.",
          "stability": "stable"
        },
        {
          "id": "models:load",
          "title": "Models Load",
          "summary": "Load a stored model artifact for execution.",
          "stability": "stable"
        },
        {
          "id": "models:add",
          "title": "Models Add",
          "summary": "Register a new model alias or adapter.",
          "stability": "stable"
        },
        {
          "id": "models:delete",
          "title": "Models Delete",
          "summary": "Remove an existing model alias or adapter.",
          "stability": "stable"
        },
        {
          "id": "models:default:get",
          "title": "Default Model Get",
          "summary": "Read the global default model selection.",
          "stability": "stable"
        },
        {
          "id": "models:default:set",
          "title": "Default Model Set",
          "summary": "Update the global default model selection.",
          "stability": "stable"
        },
        {
          "id": "models:download",
          "title": "Models Download",
          "summary": "Download remote model artifacts for local use.",
          "stability": "beta"
        }
      ]
    },
    {
      "name": "Feedback",
      "summary": "Feedback collection, automation, and application.",
      "keys": [
        {
          "id": "feedback:state",
          "title": "Feedback State",
          "summary": "Inspect the active feedback controller state.",
          "stability": "stable"
        },
        {
          "id": "feedback:signal",
          "title": "Feedback Signal",
          "summary": "Emit a feedback signal event.",
          "stability": "stable"
        },
        {
          "id": "feedback:analyze",
          "title": "Feedback Analyze",
          "summary": "Run feedback analyzers on collected signals.",
          "stability": "beta"
        },
        {
          "id": "feedback:apply",
          "title": "Feedback Apply",
          "summary": "Apply feedback-driven adjustments to the system.",
          "stability": "stable"
        },
        {
          "id": "feedback:auto",
          "title": "Feedback Auto",
          "summary": "Toggle automated feedback processing flows.",
          "stability": "experimental"
        },
        {
          "id": "feedback:reset",
          "title": "Feedback Reset",
          "summary": "Reset accumulated feedback state.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Tools",
      "summary": "Tool discovery and invocation.",
      "keys": [
        {
          "id": "tools:list",
          "title": "Tools List",
          "summary": "List available tool integrations.",
          "stability": "stable"
        },
        {
          "id": "tools:run",
          "title": "Tools Run",
          "summary": "Invoke a tool on behalf of an agent.",
          "stability": "beta"
        }
      ]
    },
    {
      "name": "Chat",
      "summary": "Interactive chat lifecycle and assurance checks.",
      "keys": [
        {
          "id": "chat:send",
          "title": "Chat Send",
          "summary": "Send a message to an active chat session.",
          "stability": "stable"
        },
        {
          "id": "chat:clear",
          "title": "Chat Clear",
          "summary": "Clear a conversation transcript.",
          "stability": "stable"
        },
        {
          "id": "chat:self_consistency",
          "title": "Chat Self-Consistency",
          "summary": "Trigger self-consistency evaluation across chat responses.",
          "stability": "experimental"
        },
        {
          "id": "chat:verify",
          "title": "Chat Verify",
          "summary": "Run verification routines on chat outputs.",
          "stability": "beta"
        }
      ]
    },
    {
      "name": "Governor",
      "summary": "Safety and steering policies applied by the governor.",
      "keys": [
        {
          "id": "governor:set",
          "title": "Governor Set",
          "summary": "Update governor policies for orchestration and safety.",
          "stability": "stable"
        },
        {
          "id": "governor:hints:set",
          "title": "Governor Hints Set",
          "summary": "Configure hint prompts for the governor.",
          "stability": "beta"
        }
      ]
    },
    {
      "name": "Hierarchy",
      "summary": "Hierarchical coordination handshakes and state access.",
      "keys": [
        {
          "id": "hierarchy:hello",
          "title": "Hierarchy Hello",
          "summary": "Introduce an agent to the coordination hierarchy.",
          "stability": "stable"
        },
        {
          "id": "hierarchy:offer",
          "title": "Hierarchy Offer",
          "summary": "Offer capabilities to the hierarchy controller.",
          "stability": "beta"
        },
        {
          "id": "hierarchy:accept",
          "title": "Hierarchy Accept",
          "summary": "Accept assignments from the hierarchy controller.",
          "stability": "beta"
        },
        {
          "id": "hierarchy:state:get",
          "title": "Hierarchy State Get",
          "summary": "Inspect the current state of the hierarchy.",
          "stability": "stable"
        },
        {
          "id": "hierarchy:role:set",
          "title": "Hierarchy Role Set",
          "summary": "Assign or update roles within the hierarchy.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Introspection",
      "summary": "Internal observability APIs for diagnostics.",
      "keys": [
        {
          "id": "introspect:tools",
          "title": "Introspect Tools",
          "summary": "Discover the available introspection tools.",
          "stability": "stable"
        },
        {
          "id": "introspect:schema",
          "title": "Introspect Schema",
          "summary": "Fetch the introspection schema definitions.",
          "stability": "stable"
        },
        {
          "id": "introspect:stats",
          "title": "Introspect Stats",
          "summary": "Read system health and runtime statistics.",
          "stability": "stable"
        },
        {
          "id": "introspect:probe",
          "title": "Introspect Probe",
          "summary": "Execute deep health probes on internal subsystems.",
          "stability": "experimental"
        }
      ]
    },
    {
      "name": "Administration",
      "summary": "Administrative controls and lifecycle hooks.",
      "keys": [
        {
          "id": "admin:shutdown",
          "title": "Admin Shutdown",
          "summary": "Trigger a controlled shutdown of the system.",
          "stability": "stable"
        },
        {
          "id": "admin:emit",
          "title": "Admin Emit",
          "summary": "Emit administrative diagnostics or events.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Regulatory Provenance",
      "summary": "Trust and provenance management via the RPU.",
      "keys": [
        {
          "id": "rpu:trust:get",
          "title": "RPU Trust Get",
          "summary": "Inspect the trust ledger maintained by the RPU.",
          "stability": "stable"
        },
        {
          "id": "rpu:trust:reload",
          "title": "RPU Trust Reload",
          "summary": "Reload trust policies and provenance rules.",
          "stability": "stable"
        }
      ]
    },
    {
      "name": "Projects",
      "summary": "Project workspace file management.",
      "keys": [
        {
          "id": "projects:file:get",
          "title": "Project File Get",
          "summary": "Read the contents of a tracked project file.",
          "stability": "stable"
        },
        {
          "id": "projects:file:set",
          "title": "Project File Set",
          "summary": "Write or replace the contents of a project file.",
          "stability": "stable"
        },
        {
          "id": "projects:file:patch",
          "title": "Project File Patch",
          "summary": "Apply a patch to a project file.",
          "stability": "beta"
        }
      ]
    }
  ],
  "generated": "2025-10-02 04:24 UTC"
}