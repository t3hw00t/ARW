{
  "openapi": "3.1.0",
  "info": {
    "title": "arw-server",
    "description": "Unified ARW server API surface (headless-first).",
    "license": {
      "name": "MIT OR Apache-2.0",
      "identifier": "MIT OR Apache-2.0"
    },
    "version": "0.1.4"
  },
  "paths": {
    "/about": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "Service metadata and endpoints index.",
        "description": "Service metadata, endpoints index, and performance preset.",
        "operationId": "about_doc",
        "responses": {
          "200": {
            "description": "Service metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AboutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Server‑Sent Events stream of envelopes.",
        "description": "Server‑Sent Events stream of envelopes; supports replay and prefix filters.",
        "operationId": "events_sse_doc",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "Resume after id or Last-Event-ID header",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "replay",
            "in": "query",
            "description": "Replay the last N events (when after not set)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "CSV of event kind prefixes to include",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SSE stream of events",
            "content": {
              "text/event-stream": {}
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "Health probe.",
        "description": "Service readiness probe.",
        "operationId": "healthz_doc",
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthOk"
                }
              }
            }
          }
        }
      }
    },
    "/state/actions": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "Recent actions list.",
        "description": "Recent actions list (most recent first).",
        "operationId": "state_actions_doc",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max items (1-2000)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actions list",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/state/models": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "Model catalog read‑model.",
        "description": "Model catalog read‑model (defaults when state/models.json missing).",
        "operationId": "state_models_doc",
        "responses": {
          "200": {
            "description": "Model catalog",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AboutCounts": {
        "type": "object",
        "required": [
          "public",
          "admin",
          "total"
        ],
        "properties": {
          "admin": {
            "type": "integer",
            "minimum": 0
          },
          "public": {
            "type": "integer",
            "minimum": 0
          },
          "total": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "AboutResponse": {
        "type": "object",
        "required": [
          "service",
          "version",
          "http",
          "counts",
          "endpoints",
          "endpoints_meta",
          "perf_preset"
        ],
        "properties": {
          "counts": {
            "$ref": "#/components/schemas/AboutCounts"
          },
          "docs_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GET /healthz",
              "GET /about"
            ]
          },
          "endpoints_meta": {
            "type": "array",
            "items": {}
          },
          "http": {
            "$ref": "#/components/schemas/HttpInfo"
          },
          "perf_preset": {
            "$ref": "#/components/schemas/PerfPreset"
          },
          "security_posture": {
            "type": [
              "string",
              "null"
            ]
          },
          "service": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "HealthOk": {
        "type": "object",
        "required": [
          "ok"
        ],
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "HttpInfo": {
        "type": "object",
        "required": [
          "bind",
          "port"
        ],
        "properties": {
          "bind": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "PerfPreset": {
        "type": "object",
        "properties": {
          "actions_queue_max": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "http_max_conc": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          },
          "tier": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Meta",
      "description": "Service metadata and health"
    },
    {
      "name": "State",
      "description": "Read‑models (actions, models, egress, episodes)"
    },
    {
      "name": "Events",
      "description": "Server‑Sent Events stream"
    }
  ]
}
