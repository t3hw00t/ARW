[package]
name = "arw-svc"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tracing = { workspace = true }
axum = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread","macros","signal","process"] }
arw-core = { path = "../../crates/arw-core" }
arw-events = { path = "../../crates/arw-events" }
arw-otel = { path = "../../crates/arw-otel", default-features = false }
tokio-stream = { workspace = true }
arw-macros = { path = "../../crates/arw-macros" }
inventory = { workspace = true }
tower-http = { version = "0.6", features = ["trace","compression-br","compression-gzip","cors","timeout","fs","limit"] }
chrono = { workspace = true }
utoipa = { workspace = true }
reqwest = { workspace = true }
futures-util = { workspace = true }
toml = { workspace = true }
arw-protocol = { path = "../../crates/arw-protocol" }
schemars = { workspace = true }
sha2 = "0.10"
fs2 = { workspace = true }
sysinfo = { workspace = true }
os_info = { workspace = true }
tonic = { version = "0.11", optional = true, features = ["transport"] }
prost = { version = "0.13", optional = true }
tower = { version = "0.5" }
once_cell = { workspace = true }
uuid = { workspace = true }
nvml-wrapper = { version = "0.9", optional = true }
wgpu = { version = "0.19", optional = true }

[features]
default = []
nats = ["arw-core/nats", "arw-events/nats"]
grpc = ["dep:tonic", "dep:prost"]
gpu_nvml = ["dep:nvml-wrapper"]
gpu_wgpu = ["dep:wgpu"]
## Optional Windows DXCore NPU detection (opt-in)
npu_dxcore = ["dep:windows"]

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.57", optional = true, features = ["Win32_Graphics_DXCore", "Win32_Graphics_Dxgi"] }

[build-dependencies]
tonic-build = { version = "0.11" }

[dev-dependencies]
tokio = { version = "1", features = ["macros","rt-multi-thread"] }
http-body-util = "0.1"
tower = { version = "0.5", features = ["util"] }    # <-- needed for ServiceExt::oneshot()
# (optional, can keep for E2E tests)
reqwest = { version = "0.12", features = ["json"] }
hyper = { version = "1" }
walkdir = "2"
