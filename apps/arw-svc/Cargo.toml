[package]
name = "arw-svc"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tracing = { workspace = true }
axum = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread","macros","signal"] }
arw-core = { path = "../../crates/arw-core" }
arw-events = { path = "../../crates/arw-events" }
arw-otel = { path = "../../crates/arw-otel", default-features = false }
tokio-stream = { workspace = true }
arw-macros = { path = "../../crates/arw-macros" }
inventory = { workspace = true }
tower-http = { version = "0.5", features = ["trace","compression-br","compression-gzip","cors","timeout","fs","limit"] }
chrono = { workspace = true }
utoipa = { workspace = true }
reqwest = { workspace = true }
futures-util = { workspace = true }
toml = { workspace = true }
arw-protocol = { path = "../../crates/arw-protocol" }

[features]
default = []
nats = ["arw-core/nats", "arw-events/nats"]

[dev-dependencies]
tokio = { version = "1", features = ["macros","rt-multi-thread"] }
http-body-util = "0.1"
tower = { version = "0.4", features = ["util"] }    # <-- needed for ServiceExt::oneshot()
# (optional, can keep for E2E tests)
reqwest = { version = "0.12", features = ["json"] }
hyper = { version = "1" }
